//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.4

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Serialize, Deserialize)]
#[sea_orm(table_name = "weather")]
pub struct Model {
    pub created_at: DateTimeWithTimeZone,
    pub updated_at: DateTimeWithTimeZone,
    #[sea_orm(primary_key)]
    pub id: i32,
    pub weather_recorded_at: Option<DateTime>,
    #[sea_orm(column_type = "Float", nullable)]
    pub weather_temperature: Option<f32>,
    #[sea_orm(column_type = "Float", nullable)]
    pub weather_dewpoint: Option<f32>,
    #[sea_orm(column_type = "Float", nullable)]
    pub weather_relative_humidity: Option<f32>,
    #[sea_orm(column_type = "Float", nullable)]
    pub weather_precipitation: Option<f32>,
    #[sea_orm(column_type = "Float", nullable)]
    pub weather_wind_gust: Option<f32>,
    #[sea_orm(column_type = "Float", nullable)]
    pub weather_pressure: Option<f32>,
    #[sea_orm(column_type = "Float", nullable)]
    pub weather_sun_hours: Option<f32>,
    pub weather_condition: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}
